@using BatteryCommander.Web.Models;
@model IEnumerable<UnitStatsViewModel>
@{
    ViewData["Title"] = "Home Page";
}
@foreach (var unit in Model)
{
    <div class="panel col-md-4">
        <div class="panel-heading">
            <div class="panel-title"><h2>@Html.DisplayFor(_ => unit.Unit)</h2></div>
        </div>


        <div class="panel-body">
            <h2>@Html.DisplayNameFor(_ => unit.ABCP)</h2>
            <table class="table table-bordered">
                <tbody>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => unit.ABCP.Assigned)</td>
                        <td>@Html.DisplayFor(_ => unit.ABCP.Assigned)</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => unit.ABCP.Passed)</td>
                        <td>@Html.ActionLink(unit.ABCP.Passed.ToString(), "Index", "Soldiers", new { unit = unit.Unit.Id, abcp = Soldier.EventStatus.Passed })</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => unit.ABCP.Failed)</td>
                        <td>@Html.ActionLink(unit.ABCP.Failed.ToString(), "Index", "Soldiers", new { unit = unit.Unit.Id, abcp = Soldier.EventStatus.Failed })</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => unit.ABCP.NotTested)</td>
                        <td>@Html.ActionLink(unit.ABCP.NotTested.ToString(), "Index", "Soldiers", new { unit = unit.Unit.Id, abcp = Soldier.EventStatus.NotTested })</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => unit.ABCP.PercentPass)</td>
                        <td>@Html.DisplayFor(_ => unit.ABCP.PercentPass)</td>
                    </tr>
                </tbody>
            </table>

            <h2>@Html.DisplayNameFor(_ => unit.APFT)</h2>
            <table class="table table-bordered">
                <tbody>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => unit.APFT.Assigned)</td>
                        <td>@Html.DisplayFor(_ => unit.APFT.Assigned)</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => unit.APFT.Passed)</td>
                        <td>@Html.ActionLink(unit.APFT.Passed.ToString(), "Index", "Soldiers", new { unit = unit.Unit.Id, apft = Soldier.EventStatus.Passed })</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => unit.APFT.Failed)</td>
                        <td>@Html.ActionLink(unit.APFT.Failed.ToString(), "Index", "Soldiers", new { unit = unit.Unit.Id, apft = Soldier.EventStatus.Failed })</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => unit.APFT.NotTested)</td>
                        <td>@Html.ActionLink(unit.APFT.NotTested.ToString(), "Index", "Soldiers", new { unit = unit.Unit.Id, apft = Soldier.EventStatus.NotTested })</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => unit.APFT.PercentPass)</td>
                        <td>@Html.DisplayFor(_ => unit.APFT.PercentPass)</td>
                    </tr>
                </tbody>
            </table>

            <h2>@Html.DisplayNameFor(_ => unit.SSD)</h2>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(_ => unit.SSD.FirstOrDefault().Rank)</th>
                        <th>Level</th>
                        <th>@Html.DisplayNameFor(_ => unit.SSD.FirstOrDefault().Assigned)</th>
                        <th>@Html.DisplayNameFor(_ => unit.SSD.FirstOrDefault().Incomplete)</th>
                        <th>@Html.DisplayNameFor(_ => unit.SSD.FirstOrDefault().Completed)</th>
                        <th>@Html.DisplayNameFor(_ => unit.SSD.FirstOrDefault().Percentage)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var row in unit.SSD)
                    {
                        <tr>
                            <td>@Html.ActionLink(row.Rank.DisplayName(), "Index", "SSD", new { unit = unit.Unit.Id, rank = row.Rank })</td>
                            <td>@SSDExtensions.RequiredSSD(row.Rank).DisplayName()</td>
                            <td>@Html.ActionLink(row.Assigned.ToString(), "Index", "SSD", new { unit = unit.Unit.Id, rank = row.Rank })</td>
                            <td>@Html.ActionLink(row.Incomplete.ToString(), "Index", "SSD", new { unit = unit.Unit.Id, rank = row.Rank, complete = false })</td>
                            <td>@Html.ActionLink(row.Completed.ToString(), "Index", "SSD", new { unit = unit.Unit.Id, rank = row.Rank, complete = true })</td>
                            <td>@Html.ActionLink(row.Percentage.ToString("P0"), "Index", "SSD", new { unit = unit.Unit.Id, rank = row.Rank })</td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <th></th>
                        <th></th>
                        <th>@Html.ActionLink(unit.SSDTotal.Assigned.ToString(), "Index", "SSD", new { unit = unit.Unit.Id })</th>
                        <th>@Html.ActionLink(unit.SSDTotal.Incomplete.ToString(), "Index", "SSD", new { unit = unit.Unit.Id, complete = false })</th>
                        <th>@Html.ActionLink(unit.SSDTotal.Completed.ToString(), "Index", "SSD", new { unit = unit.Unit.Id, complete = true })</th>
                        <th>@Html.ActionLink(unit.SSDTotal.Percentage.ToString("P0"), "Index", "SSD", new { unit = unit.Unit.Id })</th>
                    </tr>
                </tfoot>
            </table>

            <h2>@Html.DisplayNameFor(_ => unit.Education)</h2>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(_ => unit.Education.FirstOrDefault().Rank)</th>
                        <th>Level</th>
                        <th>@Html.DisplayNameFor(_ => unit.Education.FirstOrDefault().Assigned)</th>
                        <th>@Html.DisplayNameFor(_ => unit.Education.FirstOrDefault().Incomplete)</th>
                        <th>@Html.DisplayNameFor(_ => unit.Education.FirstOrDefault().Completed)</th>
                        <th>@Html.DisplayNameFor(_ => unit.Education.FirstOrDefault().Percentage)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var row in unit.Education)
                    {
                        <tr>
                            <td>@Html.ActionLink(row.Rank.DisplayName(), "Index", "Soldiers", new { unit = unit.Unit.Id, rank = row.Rank })</td>
                            <td>@EducationExtensions.RequiredEducation(row.Rank).ShortName()</td>
                            <td>@Html.ActionLink(row.Assigned.ToString(), "Index", "Soldiers", new { unit = unit.Unit.Id, rank = row.Rank })</td>
                            <td>@Html.ActionLink(row.Incomplete.ToString(), "Index", "Soldiers", new { unit = unit.Unit.Id, rank = row.Rank, education = false })</td>
                            <td>@Html.ActionLink(row.Completed.ToString(), "Index", "Soldiers", new { unit = unit.Unit.Id, rank = row.Rank, education = true })</td>
                            <td>@Html.ActionLink(row.Percentage.ToString("P0"), "Index", "Soldiers", new { unit = unit.Unit.Id, rank = row.Rank })</td>
                        </tr>
                    }
                </tbody>
                @*<tfoot>
                    <tr>
                        <th></th>
                        <th>@Html.ActionLink(unit.SSDTotal.Assigned.ToString(), "Index", "Soldiers", new { unit = unit.Unit.Id })</th>
                        <th>@Html.ActionLink(unit.SSDTotal.Incomplete.ToString(), "Index", "Soldiers", new { unit = unit.Unit.Id, education = false })</th>
                        <th>@Html.ActionLink(unit.SSDTotal.Completed.ToString(), "Index", "Soldiers", new { unit = unit.Unit.Id, education = false })</th>
                        <th>@Html.ActionLink(unit.SSDTotal.Percentage.ToString("P0"), "Index", "Soldiers", new { unit = unit.Unit.Id })</th>
                    </tr>
                </tfoot>*@
            </table>

            <h2>@Html.DisplayNameFor(_ => unit.DSCA)</h2>
            <table class="table table-bordered">
                <tbody>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => unit.DSCA.Assigned)</td>
                        <td>@Html.DisplayFor(_ => unit.DSCA.Assigned)</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => unit.DSCA.Passed)</td>
                        <td>@Html.ActionLink(unit.DSCA.Passed.ToString(), "Index", "Soldiers", new { unit = unit.Unit.Id, dsca = Soldier.EventStatus.Passed })</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => unit.DSCA.Failed)</td>
                        <td>@Html.ActionLink(unit.DSCA.Failed.ToString(), "Index", "Soldiers", new { unit = unit.Unit.Id, dsca = Soldier.EventStatus.Failed })</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => unit.DSCA.NotTested)</td>
                        <td>@Html.ActionLink(unit.DSCA.NotTested.ToString(), "Index", "Soldiers", new { unit = unit.Unit.Id, dsca = Soldier.EventStatus.NotTested })</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => unit.DSCA.PercentPass)</td>
                        <td>@Html.DisplayFor(_ => unit.DSCA.PercentPass)</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
}
