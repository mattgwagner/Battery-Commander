@model VehicleListViewModel

@{
    ViewBag.Title = "Vehicle Tracker";
}

<div class="page-header">
    <h1>
        @ViewBag.Title
        @Html.ActionLink("Add New", "New", "Vehicles", null, new { @class = "btn btn-default" })
        <!-- Not sure why Available = null wasn't working, but alas -->
        <a href="@Url.Action("Index", "Vehicles")?Available=&IncludeIgnoredUnits=true" class="btn btn-default"?>Show All</a>
    </h1>
    <h4>
        <small>
            FMC at HS: <span class="badge">@Model.FMC</span>
            PAX: <span class="badge">@Model.PAX</span>
            SEATS: <span class="badge">@Model.Seats</span>
            CAPACITY: <span class="badge">@Model.Capacity</span>
        </small>
    </h4>
</div>

<div id="vehicle-list">

    <table class="table table-striped display nowrap" width="100%" id="dt">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(_ => _.Vehicles.FirstOrDefault().Status)</th>
                <th data-priority="10001">@Html.DisplayNameFor(_ => _.Vehicles.FirstOrDefault().Unit)</th>
                <th data-priority="1">@Html.DisplayNameFor(_ => _.Vehicles.FirstOrDefault().Bumper)</th>
                <th data-priority="4">@Html.DisplayNameFor(_ => _.Vehicles.FirstOrDefault().Type)</th>
                <th data-priority="5">@Html.DisplayNameFor(_ => _.Vehicles.FirstOrDefault().Seats)</th>
                <th data-priority="2">@Html.DisplayNameFor(_ => _.Vehicles.FirstOrDefault().Chalk)</th>
                <th data-priority="3">@Html.DisplayNameFor(_ => _.Vehicles.FirstOrDefault().OrderOfMarch)</th>
                <th>@Html.DisplayNameFor(_ => _.Vehicles.FirstOrDefault().TotalCapacity)</th>
                <th>@Html.DisplayNameFor(_ => _.Vehicles.FirstOrDefault().Nomenclature)</th>
                <th>@Html.DisplayNameFor(_ => _.Vehicles.FirstOrDefault().Registration)</th>
                <th>@Html.DisplayNameFor(_ => _.Vehicles.FirstOrDefault().Serial)</th>
                <th>@Html.DisplayNameFor(_ => _.Vehicles.FirstOrDefault().LIN)</th>
                <th data-priority="4">@Html.DisplayNameFor(_ => _.Vehicles.FirstOrDefault().Driver)</th>
                <th data-priority="4">@Html.DisplayNameFor(_ => _.Vehicles.FirstOrDefault().A_Driver)</th>
                <th>@Html.DisplayNameFor(_ => _.Vehicles.FirstOrDefault().HasJBCP)</th>
                <th data-priority="5">@Html.DisplayNameFor(_ => _.Vehicles.FirstOrDefault().Location)</th>
                <th data-priority="6">@Html.DisplayNameFor(_ => _.Vehicles.FirstOrDefault().Notes)</th>
                <th></th>
                <th>Passengers</th>
                <th></th>
            </tr>
        </thead>

        <tbody>
            @foreach (var vehicle in Model.Vehicles)
            {
            <tr>
                <td>
                    <span class="update-status" data-vehicle="@vehicle.Id" data-status="@vehicle.Status" data-notes="@vehicle.Notes" data-location="@vehicle.Location" data-sort="@vehicle.Status">
                        @Html.DisplayFor(_ => vehicle, "VehicleStatus")
                    </span>
                    @if (vehicle.HasFuelCard)
                    {
                        <span class="label label-primary">GC</span>
                    }
                    @if (vehicle.HasTowBar)
                    {
                        <span class="label label-primary">TB</span>
                    }
                </td>
                <td>@Html.DisplayFor(_ => vehicle.Unit)</td>
                <td>@Html.DisplayFor(_ => vehicle)</td>
                <td>@Html.DisplayFor(_ => vehicle.Type)</td>
                <td>@Html.DisplayFor(_ => vehicle.Seats)</td>
                <td>@Html.DisplayFor(_ => vehicle.Chalk)</td>
                <td>@Html.DisplayFor(_ => vehicle.OrderOfMarch)</td>
                <td>@Html.DisplayFor(_ => vehicle.TotalCapacity)</td>
                <td>
                    @if (!String.IsNullOrWhiteSpace(vehicle.Nomenclature))
                    {
                        <a href="@vehicle.GoogleSearchUrl" target="_blank">@vehicle.Nomenclature</a>
                    }
                </td>
                <td>@Html.DisplayFor(_ => vehicle.Registration)</td>
                <td>@Html.DisplayFor(_ => vehicle.Serial)</td>
                <td>@Html.DisplayFor(_ => vehicle.LIN)</td>
                @if (vehicle.Available)
                {
                    <td>
                        @if (vehicle.DriverId.HasValue)
                        {
                            <span class="update-driver" data-vehicle="@vehicle.Id" data-bumper="@vehicle.Bumper" data-driver="@vehicle.DriverId" data-adriver="@vehicle.A_DriverId">
                                @vehicle.Driver.Rank.ShortName() @vehicle.Driver.LastName
                            </span>
                        }
                        else
                        {
                            <span class="update-driver label label-default" data-vehicle="@vehicle.Id" data-bumper="@vehicle.Bumper" data-driver="@vehicle.DriverId" data-adriver="@vehicle.A_DriverId">(Empty)</span>
                        }
                    </td>
                    <td>
                        @if (vehicle.A_DriverId.HasValue)
                        {
                            <span class="update-driver" data-vehicle="@vehicle.Id" data-bumper="@vehicle.Bumper" data-driver="@vehicle.DriverId" data-adriver="@vehicle.A_DriverId">
                                @vehicle.A_Driver.Rank.ShortName() @vehicle.A_Driver.LastName
                            </span>
                        }
                        else
                        {
                            <span class="update-driver label label-default" data-vehicle="@vehicle.Id" data-bumper="@vehicle.Bumper" data-driver="@vehicle.DriverId" data-adriver="@vehicle.A_DriverId">(Empty)</span>
                        }
                    </td>
                }
                else
                {
                    <td></td>
                    <td></td>
                }
                <td>
                    @if (vehicle.HasJBCP)
                    {
                        <span class="label label-default">JBC-P</span>
                    }
                </td>
                <td class="update-status">@Html.DisplayFor(_ => vehicle, "VehicleLocation")</td>
                <td>
                    <span class="update-status" data-vehicle="@vehicle.Id" data-status="@((int)vehicle.Status)" data-notes="@vehicle.Notes">
                        @Html.DisplayFor(_ => vehicle.Notes)
                    </span>
                </td>
                <td>@Html.ActionLink("Edit", "Edit", new { vehicle.Id })</td>
                <td>
                    <ul>
                        @foreach (var passenger in vehicle.Passengers)
                        {
                            <li>@Html.DisplayFor(_ => passenger.Soldier, "Soldier")</li>
                        }
                    </ul>
                </td>
                <td></td>
            </tr>
            }
        </tbody>
    </table>

    <form method="post" action="@Url.Action("Reset", "Vehicles", Model.Query)">
        @Html.AntiForgeryToken()
        <button class="btn btn-danger btn-xs">Reset Convoy</button>
    </form>

    <div style="display:none" id="set-driver" title="Update Driver/A-Driver">
        <div class="form-group form-group-lg">
            @Html.Label("Driver")
            <select data-bind="value: driverId, options: soldiers, optionsText: 'Text', optionsValue: 'Value', optionsCaption: 'Choose a Driver'" class="select2"></select>
        </div>

        <div class="form-group form-group-lg">
            @Html.Label("A-Driver")
            <select data-bind="value: adriverId, options: soldiers, optionsText: 'Text', optionsValue: 'Value', optionsCaption: 'Choose an A-Driver'" class="select2"></select>
        </div>

        <button data-bind="click: save_drivers" type="submit" id="save">Save</button>
    </div>

    <div style="display:none" id="set-status" title="Update Vehicle Status">
        <div class="form-group form-group-lg">
            @Html.Label("Status")
            <select data-bind="value: status, options: statuses"></select>
        </div>

        <div class="form-group form-group-lg">
            @Html.Label("Location")
            <select data-bind="value: location, options: locations"></select>
        </div>

        <div class="form-group form-group-lg">
            @Html.Label("Notes")
            <input type="text" data-bind="value: notes" />
        </div>

        <button data-bind="click: save_vehicle">Save</button>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            var viewModel = {
                driverId: ko.observable(),
                adriverId: ko.observable(),
                vehicleId: ko.observable(),
                status: ko.observable(),
                notes: ko.observable(''),
                location: ko.observable(),
                locations: ko.mapping.fromJSON('@Html.Raw(JsonConvert.SerializeObject(Model.Locations))'),
                statuses: ko.mapping.fromJSON('@Html.Raw(JsonConvert.SerializeObject(Model.Statuses))'),
                soldiers: ko.mapping.fromJSON('@Html.Raw(JsonConvert.SerializeObject(Model.Soldiers))')
            };

            viewModel.save_drivers = function () {
                $.post('@Url.Action("SetDriver")', {
                    driverId: viewModel.driverId,
                    adriverId: viewModel.adriverId,
                    vehicleId: viewModel.vehicleId
                });
                location.reload();
            };

            viewModel.save_vehicle = function () {
                $.post('@Url.Action("SetStatus")', {
                    vehicleId: viewModel.vehicleId,
                    status: viewModel.status,
                    notes: viewModel.notes,
                    location: viewModel.location
                });
                location.reload();
            };

            $("td .update-status").click(function (e) {
                e.preventDefault();
                viewModel.vehicleId($(this).data('vehicle'));
                viewModel.status($(this).data('status'));
                viewModel.notes($(this).data('notes'));
                viewModel.location($(this).data('location'));

                $("#set-status").dialog({ modal: true });
            });

            $("td .update-driver").click(function (e) {
                e.preventDefault();
                viewModel.vehicleId($(this).data('vehicle'));
                viewModel.driverId($(this).data('driver'));
                viewModel.adriverId($(this).data('adriver'));

                $("#set-driver").dialog({ modal: true });
            });

            window.viewModel = viewModel;

            ko.applyBindings(viewModel, document.getElementById('vehicle-list'));
        });
    </script>
}