@model SoldierListViewModel

@{
    ViewBag.Title = "Battle Roster";
}

<div class="page-header">
    <h1>@ViewBag.Title @Html.ActionLink("View All", "All", "Soldiers", null, new { @class = "btn btn-default" }) @Html.ActionLink("Add New", "New", "Soldiers", null, new { @class = "btn btn-default" })</h1>
    <h4>
        Assigned <span class="badge">@Model.Count</span>
        Present <span class="badge">@Model.Present</span>
    </h4>
    <div class="btn-group">
        @Html.ActionLink("Update Supervisors", "Index", "Supervisors", Model.Query, new { @class = "btn btn-link" })
    </div>
</div>

<table class="table table-striped display nowrap" id="dt" width="100%" data-page-length="25">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(_ => _.Soldiers.FirstOrDefault().Status)</th>
            <th data-priority="2">@Html.DisplayNameFor(_ => _.Soldiers.FirstOrDefault().Rank)</th>
            <th data-priority="1">@Html.DisplayNameFor(_ => _.Soldiers.FirstOrDefault().LastName)</th>
            <th data-priority="3">@Html.DisplayNameFor(_ => _.Soldiers.FirstOrDefault().FirstName)</th>
            <th>@Html.DisplayNameFor(_ => _.Soldiers.FirstOrDefault().Unit)</th>
            <th>@Html.DisplayNameFor(_ => _.Soldiers.FirstOrDefault().EducationLevel)</th>
            <th>@Html.DisplayNameFor(_ => _.Soldiers.FirstOrDefault().TimeInGrade)</th>
            <th>@Html.DisplayNameFor(_ => _.Soldiers.FirstOrDefault().TimeTillETS)</th>
            <th>@Html.DisplayNameFor(_ => _.Soldiers.FirstOrDefault().APFTs)</th>
            <th>@Html.DisplayNameFor(_ => _.Soldiers.FirstOrDefault().ABCPs)</th>
            <th>@Html.DisplayNameFor(_ => _.Soldiers.FirstOrDefault().SSDStatus)</th>
            <th>@Html.DisplayNameFor(_ => _.Soldiers.FirstOrDefault().IwqQualified)</th>
            <th>@Html.DisplayNameFor(_ => _.Soldiers.FirstOrDefault().DscaQualified)</th>
            <th>@Html.DisplayNameFor(_ => _.Soldiers.FirstOrDefault().ClsQualified)</th>
            <th data-priority="10001"></th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var soldier in Model.Soldiers)
        {
            <tr>
                <td>
                    <span class="update-status" data-soldier="@soldier.Id" data-status="@((int)soldier.Status)">
                        @Html.DisplayFor(s => soldier, "SoldierStatus")
                    </span>
                </td>
                <td data-sort="@((int)soldier.Rank)">@Html.DisplayFor(s => soldier.RankHumanized)</td>
                <td>@Html.RouteLink(soldier.LastName, "Soldier.Details", new { soldier.Id })</td>
                <td>@Html.RouteLink(soldier.FirstName, "Soldier.Details", new { soldier.Id })</td>
                <td>@Html.DisplayFor(s => soldier.Unit)</td>
                <td>@Html.DisplayFor(s => soldier, "MilitaryEducationLevel")</td>
                <td data-sort="@soldier.TimeInGrade?.TotalDays">
                    <span class="label label-default">@Html.DisplayFor(s => soldier.TimeInGradeHumanized)</span>
                </td>
                <td data-sort="@soldier.TimeTillETS?.TotalDays">@Html.DisplayFor(s => soldier, "ETS")</td>
                <td data-sort="@soldier.LastApft?.TotalScore">
                    @Html.DisplayFor(s => soldier.LastApft)
                    @if (soldier.LastApft?.IsAlternateAerobicEvent == true)
                    {
                        <span class="label">Alt. Aerobic</span>
                    }
                </td>
                <td>@Html.DisplayFor(s => soldier.LastAbcp)</td>
                <td>@Html.DisplayFor(s => soldier.SSDStatus)</td>
                <td>@Html.DisplayFor(s => soldier, "IWQ")</td>
                <td>@Html.DisplayFor(s => soldier, "DSCA")</td>
                <td>@Html.DisplayFor(s => soldier, "CLS")</td>
                <td data-sort="@soldier.LastName">
                    @Html.RouteLink("Details", "Soldier.Details", new { soldier.Id }, new { @class = "btn btn-default btn-xs" })
                    @if (!soldier.HasDoB)
                    {
                        <span class="label label-warning">Needs Birthdate</span>
                    }
                    else
                    {
                        @Html.ActionLink("Add ABCP", "New", "ABCP", new { soldier = soldier.Id }, new { @class = "btn btn-default btn-xs" })
                        @Html.ActionLink("Add APFT", "New", "APFT", new { soldier = soldier.Id }, new { @class = "btn btn-default btn-xs" })
                    }
                </td>
                <td></td>
            </tr>
        }
    </tbody>
</table>

<div style="display:none" id="set-status" title="Update Soldier Status">
    @using (Html.BeginForm("SetStatus", "Soldiers", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        <input id="soldierId" name="soldierId" type="hidden" />

        <div class="form-group form-group-lg">
            @Html.Label("Status")
            @Html.DropDownList("status", Html.GetEnumSelectList<Soldier.SoldierStatus>())
        </div>

        <button type="submit" id="save">Save</button>
    }
</div>

@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $("td .update-status").click(function (e) {
                $("#soldierId").val($(this).data('soldier'));
                $("#status").val($(this).data('status')).trigger('change');

                $("#set-status").dialog({
                    modal: true
                });
            });
        });
    </script>
}
