@model SoldierDetailsViewModel

<div class="panel panel-default">

    <div class="panel-heading">
        <h1 class="panel-title">@Html.DisplayFor(model => model.Soldier) @Html.ActionLink("Edit", "Edit", new { Model.Soldier.Id }, new { @class = "btn btn-default" })</h1>
    </div>

    <table class="table">
        <tr>
            <td>@Html.DisplayNameFor(model => model.Soldier.DateOfBirth)</td>
            <td>@Html.DisplayFor(model => model.Soldier.DateOfBirth) (@Html.DisplayFor(model => model.Soldier.Age) y/o)</td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.Soldier.MilitaryEmail)</td>
            <td>@Html.DisplayFor(model => model.Soldier.MilitaryEmail)</td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.Soldier.DoDId)</td>
            <td>@Html.DisplayFor(model => model.Soldier.DoDId)</td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.Soldier.CivilianEmail)</td>
            <td>@Html.DisplayFor(model => model.Soldier.CivilianEmail)</td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.Soldier.Gender)</td>
            <td>@Html.DisplayFor(model => model.Soldier.Gender)</td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.Soldier.Unit)</td>
            <td>@Html.DisplayFor(model => model.Soldier.Unit)</td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.Soldier.DateOfRank)</td>
            <td>@Html.DisplayFor(model => model.Soldier.DateOfRank) (@Html.DisplayFor(model => model.Soldier.TimeInGradeHumanized))</td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.Soldier.ETSDate)</td>
            <td>@Html.DisplayFor(model => model.Soldier.ETSDate) (@Html.DisplayFor(model => model.Soldier.TimeTillETSHumanized))</td>
        </tr>
    </table>
</div>

<div class="panel panel-default">

    <div class="panel-heading">
        <h2 class="panel-title">@Html.DisplayNameFor(_ => _.Soldier.APFTs) @Html.ActionLink("Add New", "New", "APFT", new { soldier = Model.Soldier.Id }, new { @class = "btn btn-default btn-xs" })</h2>
    </div>

    <div class="panel-body">
        <table class="table">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(_ => _.Soldier.APFTs.FirstOrDefault().Date)</th>
                    <th>@Html.DisplayNameFor(_ => _.Soldier.APFTs.FirstOrDefault().PushUps)</th>
                    <th>@Html.DisplayNameFor(_ => _.Soldier.APFTs.FirstOrDefault().SitUps)</th>
                    <th>@Html.DisplayNameFor(_ => _.Soldier.APFTs.FirstOrDefault().Run)</th>
                    <th>@Html.DisplayNameFor(_ => _.Soldier.APFTs.FirstOrDefault().TotalScore)</th>
                    <th>@Html.DisplayNameFor(_ => _.Soldier.APFTs.FirstOrDefault().IsPassing)</th>
                    <th></th>
                </tr>
            </thead>

            <tbody>
                @foreach (var apft in Model.Soldier.APFTs.OrderByDescending(_ => _.Date))
                {
                    <tr>
                        <td>@Html.DisplayFor(_ => apft.Date)</td>
                        <td>@Html.DisplayFor(_ => apft.PushUps)</td>
                        <td>@Html.DisplayFor(_ => apft.SitUps)</td>
                        <td>@Html.DisplayFor(_ => apft.Run)</td>
                        <td>@Html.DisplayFor(_ => apft.TotalScore)</td>
                        <td>
                            @if (apft.IsPassing)
                            {
                                <span class="label label-success">Passing</span>
                            }
                            else
                            {
                                <span class="label label-danger">Failure</span>
                            }
                        </td>
                        <td>@Html.ActionLink("Details", "Details", "APFT", new { apft.Id })</td>
                    </tr>
                }
            </tbody>
        </table>

        <div id="apft_chart"></div>
    </div>
</div>

<div class="panel panel-default">

    <div class="panel-heading">
        <h2 class="panel-title">@Html.DisplayNameFor(_ => _.Soldier.ABCPs) @Html.ActionLink("Add New", "New", "ABCP", new { soldier = Model.Soldier.Id }, new { @class = "btn btn-default btn-xs" })</h2>
    </div>

    <div class="panel-body">
        <table class="table">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(_ => _.Soldier.ABCPs.FirstOrDefault().Date)</th>
                    <th>@Html.DisplayNameFor(_ => _.Soldier.ABCPs.FirstOrDefault().Weight)</th>
                    <th>@Html.DisplayNameFor(_ => _.Soldier.ABCPs.FirstOrDefault().Screening_Weight)</th>
                    <th>@Html.DisplayNameFor(_ => _.Soldier.ABCPs.FirstOrDefault().IsPassing)</th>
                    <th></th>
                </tr>
            </thead>

            <tbody>
                @foreach (var abcp in Model.Soldier.ABCPs.OrderByDescending(_ => _.Date))
                {
                    <tr>
                        <td>@Html.DisplayFor(_ => abcp.Date)</td>
                        <td>@Html.DisplayFor(_ => abcp.Weight)</td>
                        <td>@Html.DisplayFor(_ => abcp.Screening_Weight)</td>
                        <td>
                            @if (abcp.IsPassing)
                            {
                                <span class="label label-success">Passing</span>
                            }
                            else
                            {
                                <span class="label label-danger">Failure</span>
                            }
                        </td>
                        <td>@Html.ActionLink("Details", "Details", "ABCP", new { abcp.Id })</td>
                    </tr>
                }
            </tbody>
        </table>

        <div id="abcp_chart"></div>
    </div>
</div>

@if (Model.Evaluations.Any())
{
    <div class="panel panel-default">

        <div class="panel-heading">
            <h2 class="panel-title">@Html.DisplayNameFor(_ => _.Evaluations) @Html.ActionLink("Add New", "New", "Evaluations", null, new { @class = "btn btn-default btn-xs" })</h2>
        </div>

        <div class="panel-body">
            <table class="table">
                <thead>
                    <tr>
                        <th></th>
                        <th>@Html.DisplayNameFor(_ => _.Evaluations.FirstOrDefault().Role)</th>
                        <th>@Html.DisplayNameFor(_ => _.Evaluations.FirstOrDefault().Evaluation.Ratee)</th>
                        <th>@Html.DisplayNameFor(_ => _.Evaluations.FirstOrDefault().Evaluation.Status)</th>
                        <th>@Html.DisplayNameFor(_ => _.Evaluations.FirstOrDefault().Evaluation.Delinquency)</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var evaluation in Model.Evaluations)
                {
                        <tr>
                            <td>@Html.ActionLink("Details", "Details", "Evaluations", new { evaluation.Evaluation.Id })</td>
                            <td>@Html.DisplayFor(_ => evaluation.Role)</td>
                            <td>@Html.DisplayFor(_ => evaluation.Evaluation.Ratee)</td>
                            <td>@Html.DisplayFor(_ => evaluation.Evaluation.Status)</td>
                            <td>
                                @if (evaluation.Evaluation.Delinquency > TimeSpan.Zero)
                                {
                                    <span class="label label-default">Due in @Html.DisplayFor(_ => evaluation.Evaluation.DelinquencyHumanized)</span>
                                }
                                else
                                {
                                    <span class="label label-danger">Overdue @Html.DisplayFor(_ => evaluation.Evaluation.DelinquencyHumanized)</span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

<div>
    @using (Html.BeginForm("Delete", "Soldiers", new { Model.Soldier.Id }, FormMethod.Post))
            {
        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-danger">Delete</button>
    }
</div>

@section Scripts
{
    @{
        var apft_data =
            Model
            .Soldier
            .APFTs
            .OrderBy(apft => apft.Date)
            .Select(apft => new
            {
                date = apft.Date.ToString("yyyy-MM-dd"),
                score = apft.TotalScore
            })
            .ToList();

        var abcp_data =
            Model
            .Soldier
            .ABCPs
            .OrderBy(abcp => abcp.Date)
            .Select(abcp => new
            {
                date = abcp.Date.ToString("yyyy-MM-dd"),
                weight = abcp.Weight
            })
            .ToList();
    }

    <!--Load the AJAX API-->
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        // Load the Visualization API and the corechart package.
        google.charts.load('current', { 'packages': ['corechart'] });

        var apft_data = JSON.parse('@Json.Serialize(apft_data)');

        var abcp_data = JSON.parse('@Json.Serialize(abcp_data)');

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(draw_apft_chart);
        google.charts.setOnLoadCallback(draw_abcp_chart);

        function draw_apft_chart() {
            // Create the data table.
            var data = new google.visualization.DataTable();

            data.addColumn('date', 'Date');
            data.addColumn('number', 'Score');

            for (var i = 0; i < apft_data.length; i++)
            {
                data.addRow([new Date(apft_data[i].date), apft_data[i].score]);
            }

            var chart = new google.visualization.LineChart(document.getElementById('apft_chart'));

            chart.draw(data, {
                title: 'APFT - Scores',
                legend: { position: 'bottom' }
            });
        }

        function draw_abcp_chart() {
            // Create the data table.
            var data = new google.visualization.DataTable();

            data.addColumn('date', 'Date');
            data.addColumn('number', 'Weight');

            for (var i = 0; i < abcp_data.length; i++) {
                data.addRow([new Date(abcp_data[i].date), abcp_data[i].weight]);
            }

            var chart = new google.visualization.LineChart(document.getElementById('abcp_chart'));

            chart.draw(data, {
                title: 'ACBP - Weight',
                legend: { position: 'bottom' }
            });
        }
    </script>
}