@model SUTA

<div class="container-fluid">

    <table class="table table-bordered">

        <tr>
            <td>@Html.DisplayNameFor(model => model.Status)</td>
            <td>@Html.DisplayFor(model => model.Status)</td>
        </tr>

        <tr>
            <td>@Html.DisplayNameFor(model => model.Soldier)</td>
            <td>@Html.DisplayFor(model => model.Soldier)</td>
        </tr>

        <tr>
            <td>@Html.DisplayNameFor(model => model.StartDate)</td>
            <td>@Html.DisplayFor(model => model.StartDate)</td>
        </tr>

        <tr>
            <td>@Html.DisplayNameFor(model => model.EndDate)</td>
            <td>@Html.DisplayFor(model => model.EndDate)</td>
        </tr>

        <tr>
            <td>@Html.DisplayNameFor(model => model.Reasoning)</td>
            <td>@Html.DisplayFor(model => model.Reasoning)</td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.MitigationPlan)</td>
            <td>@Html.DisplayFor(model => model.MitigationPlan)</td>
        </tr>

        <tr>
            <td>@Html.DisplayNameFor(model => model.Supervisor)</td>
            <td>
                @Html.DisplayFor(model => model.Supervisor)
                @Html.DisplayFor(model => model.SupervisorSignature)
                @Html.DisplayFor(model => model.SupervisorSignedAt)

                @if (User.Identity.IsAuthenticated && String.IsNullOrWhiteSpace(Model.SupervisorSignature))
                {
                    using (Html.BeginForm("Sign", "SUTA", new { Model.Id }, FormMethod.Post))
                    {
                        @Html.Hidden("Supervisor", Boolean.TrueString)

                        <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to sign?')">SIGN</button>
                    }
                }
            </td>
        </tr>

        <!-- TODO There other people in the COC that need to approve before it gets to Top? -->

        <tr>
            <td>@Html.DisplayNameFor(model => model.FirstSergeantSignature)</td>
            <td>
                @Html.DisplayFor(model => model.FirstSergeantSignature)
                @Html.DisplayFor(model => model.FirstSergeantSignedAt)

                @if (User.Identity.IsAuthenticated && String.IsNullOrWhiteSpace(Model.FirstSergeantSignature))
                {
                    using (Html.BeginForm("Sign", "SUTA", new { Model.Id }, FormMethod.Post))
                    {
                        @Html.Hidden("FirstSergeant", Boolean.TrueString)

                        <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to sign?')">SIGN</button>
                    }
                }
            </td>
        </tr>

        <tr>
            <td>@Html.DisplayNameFor(model => model.CommanderSignature)</td>
            <td>
                @Html.DisplayFor(model => model.CommanderSignature)
                @Html.DisplayFor(model => model.CommanderSignedAt)

                @if (User.Identity.IsAuthenticated && String.IsNullOrWhiteSpace(Model.CommanderSignature))
                {
                    using (Html.BeginForm("Sign", "SUTA", new { Model.Id }, FormMethod.Post))
                    {
                        @Html.Hidden("Commander", Boolean.TrueString)

                        <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to sign?')">SIGN</button>
                    }
                }
            </td>
        </tr>
    </table>

    @if (User.Identity.IsAuthenticated)
    {
        <hr />

        @using (Html.BeginForm("Comment", "SUTA", new { Model.Id }, FormMethod.Post, true, new { @class = "form-horitzontal" }))
        {
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                <label for="CommentPlan">Comments</label>
                <span id="CommentPlanHelp" class="form-text text-muted">What is the impact to the Battery Mission? How are we mitigating any impact? Have we coordinated pick-up or make-up periods?</span>
                <textarea id="comment" name="comment" cols="40" rows="5" class="form-control" aria-describedby="CommentPlanHelp"></textarea>
            </div>

            <button type="submit" class="btn btn-default">Add Comment</button>
        }

        <hr />

        <h2>@Html.DisplayNameFor(_ => Model.Events)</h2>

        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Who</th>
                    <th>What</th>
                    <th>When</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var @event in Model.Events.OrderByDescending(_ => _.Timestamp))
                {
                    <tr>
                        <td>@Html.DisplayFor(_ => @event.Author)</td>
                        <td>@Html.DisplayFor(_ => @event.Message)</td>
                        <td>@Html.DisplayFor(_ => @event.TimestampHumanized)</td>
                    </tr>
                }
            </tbody>
        </table>

        <div>
            @using (Html.BeginForm("Delete", "SUTA", new { Model.Id }, FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this request?')">Delete</button>
            }
        </div>
    }
</div>