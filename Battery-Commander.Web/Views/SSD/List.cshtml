@model IEnumerable<Soldier>

<div class="page-header">
    <h1>SSD Tracker <span class="badge">@Model.Count()</span></h1>
</div>

<table class="table table-striped" id="dt">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(_ => _.FirstOrDefault().Rank)</th>
            <th>@Html.DisplayNameFor(_ => _.FirstOrDefault().LastName)</th>
            <th>@Html.DisplayNameFor(_ => _.FirstOrDefault().FirstName)</th>
            <th>@Html.DisplayNameFor(_ => _.FirstOrDefault().Unit)</th>
            <th>@Html.DisplayNameFor(_ => _.FirstOrDefault().EducationLevel)</th>
            <th>@Html.DisplayNameFor(_ => _.FirstOrDefault().SSDStatus.AsOf)</th>
            <th>@Html.DisplayNameFor(_ => _.FirstOrDefault().SSDStatus.SSD_1)</th>
            <th>@Html.DisplayNameFor(_ => _.FirstOrDefault().SSDStatus.SSD_2)</th>
            <th>@Html.DisplayNameFor(_ => _.FirstOrDefault().SSDStatus.SSD_3)</th>
            <th>@Html.DisplayNameFor(_ => _.FirstOrDefault().SSDStatus.SSD_4)</th>
            <th>@Html.DisplayNameFor(_ => _.FirstOrDefault().SSDStatus.SSD_5)</th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var soldier in Model)
        {
            <tr>
                <td>@Html.DisplayFor(s => soldier.RankHumanized)</td>
                <td>@Html.DisplayFor(s => soldier.LastName)</td>
                <td>@Html.DisplayFor(s => soldier.FirstName)</td>
                <td>@Html.DisplayFor(s => soldier.Unit, additionalViewData: new { controller = "SSD" })</td>
                <td>@Html.DisplayFor(s => soldier.EducationLevel)</td>
                <td>@Html.DisplayFor(s => soldier.SSDStatus.AsOf)</td>
                <td class="update" data-soldier="@soldier.Id" data-ssd="SSD_1" data-completion="@soldier.SSDStatus.SSD_1">@Html.DisplayFor(s => soldier.SSDStatus.SSD_1)</td>
                <td class="update" data-soldier="@soldier.Id" data-ssd="SSD_2" data-completion="@soldier.SSDStatus.SSD_2">@Html.DisplayFor(s => soldier.SSDStatus.SSD_2)</td>
                <td class="update" data-soldier="@soldier.Id" data-ssd="SSD_3" data-completion="@soldier.SSDStatus.SSD_3">@Html.DisplayFor(s => soldier.SSDStatus.SSD_3)</td>
                <td class="update" data-soldier="@soldier.Id" data-ssd="SSD_4" data-completion="@soldier.SSDStatus.SSD_4">@Html.DisplayFor(s => soldier.SSDStatus.SSD_4)</td>
                <td class="update" data-soldier="@soldier.Id" data-ssd="SSD_5" data-completion="@soldier.SSDStatus.SSD_5">@Html.DisplayFor(s => soldier.SSDStatus.SSD_5)</td>
                <td></td>
            </tr>
        }
    </tbody>
</table>

<div style="display:none" id="update-modal">
    @using (Html.BeginForm("Update", "SSD", FormMethod.Post))
    {
        <input id="soldierId" type="hidden" />
        <input id="ssd" type="hidden" />
        <input id="completion" type="range" />
        <!-- Comments? -->
        <button type="submit" id="save">Save</button>
    }

</div>

@section Scripts{
    <script type="text/javascript">
        $("td .update").click(function () {
            var ssd = $(this).data('ssd');
            var completion = $(this).data('completion');
            var soldierId = $(this).data('soldier');

            alert(soldierId + ' is ' + completion + '% complete with ' + ssd);

            // TODO Populate and display modal form for updates
        });
    </script>
}