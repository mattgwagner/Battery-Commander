@model Unit

@{

    var sections = new[]
    {
            "PERSTAT",
            "ABCP",
            "APFT",
            "SSD",
            "EDUCATION",
            "DSCA",
            "IWQ",
            "CLS",
            "OrgChart"
    };
}

<div class="page-header">
    <h1>@Html.DisplayFor(_ => Model)</h1>
    <h4>@Html.ActionLink("Edit", "Edit", new { Model.Id }, new { @class = "btn btn-default btn-xs" })</h4>
</div>

<div>

    <ul class="nav nav-pills nav-justified">
        @foreach (var section in sections)
        {
            <li role="presentation"><a href="#@(section)" data-toggle="tab">@Html.DisplayFor(_ => section)</a></li>
        }
    </ul>

    <div class="tab-content">
        <div role="tabpanel" class="tab-pane active" id="PERSTAT">
            <h2>@Html.DisplayNameFor(model => model.PERSTAT)</h2>
            @Html.DisplayFor(model => model, "Red1_Perstat")
        </div>

        <div role="tabpanel" class="tab-pane" id="ABCP">
            <h2>@Html.DisplayNameFor(_ => Model.ABCP)</h2>
            <table class="table table-bordered">
                <tbody>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => Model.ABCP.Assigned)</td>
                        <td>@Html.DisplayFor(_ => Model.ABCP.Assigned)</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => Model.ABCP.Passed)</td>
                        <td>@Html.ActionLink(Model.ABCP.Passed.ToString(), "Index", "Soldiers", new SoldierSearchService.Query { Unit = Model.Id, ABCP = EventStatus.Passed })</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => Model.ABCP.Failed)</td>
                        <td>@Html.ActionLink(Model.ABCP.Failed.ToString(), "Index", "Soldiers", new SoldierSearchService.Query { Unit = Model.Id, ABCP = EventStatus.Failed })</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => Model.ABCP.NotTested)</td>
                        <td>@Html.ActionLink(Model.ABCP.NotTested.ToString(), "Index", "Soldiers", new SoldierSearchService.Query { Unit = Model.Id, ABCP = EventStatus.NotTested })</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => Model.ABCP.PercentPass)</td>
                        <td>@Html.DisplayFor(_ => Model.ABCP.PercentPass)</td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div role="tabpanel" class="tab-pane" id="APFT">
            <h2>@Html.DisplayNameFor(_ => Model.APFT)</h2>
            <table class="table table-bordered">
                <tbody>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => Model.APFT.Assigned)</td>
                        <td>@Html.DisplayFor(_ => Model.APFT.Assigned)</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => Model.APFT.Passed)</td>
                        <td>@Html.ActionLink(Model.APFT.Passed.ToString(), "Index", "Soldiers", new SoldierSearchService.Query { Unit = Model.Id, APFT = EventStatus.Passed })</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => Model.APFT.Failed)</td>
                        <td>@Html.ActionLink(Model.APFT.Failed.ToString(), "Index", "Soldiers", new SoldierSearchService.Query { Unit = Model.Id, APFT = EventStatus.Failed })</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => Model.APFT.NotTested)</td>
                        <td>@Html.ActionLink(Model.APFT.NotTested.ToString(), "Index", "Soldiers", new SoldierSearchService.Query { Unit = Model.Id, APFT = EventStatus.NotTested })</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => Model.APFT.PercentPass)</td>
                        <td>@Html.DisplayFor(_ => Model.APFT.PercentPass)</td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div role="tabpanel" class="tab-pane" id="SSD">
            <h2>@Html.DisplayNameFor(_ => Model.SSD)</h2>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(_ => Model.SSD.FirstOrDefault().Rank)</th>
                        <th>Level</th>
                        <th>@Html.DisplayNameFor(_ => Model.SSD.FirstOrDefault().Assigned)</th>
                        <th>@Html.DisplayNameFor(_ => Model.SSD.FirstOrDefault().Incomplete)</th>
                        <th>@Html.DisplayNameFor(_ => Model.SSD.FirstOrDefault().Completed)</th>
                        <th>@Html.DisplayNameFor(_ => Model.SSD.FirstOrDefault().Percentage)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var row in Model.SSD)
            {
                        <tr>
                            <td>@Html.ActionLink(row.Rank.DisplayName(), "Index", "SSD", new SoldierSearchService.Query { Unit = Model.Id, Ranks = new[] { row.Rank } })</td>
                            <td>@SSDExtensions.RequiredSSD(row.Rank).DisplayName()</td>
                            <td>@Html.ActionLink(row.Assigned.ToString(), "Index", "SSD", new SoldierSearchService.Query { Unit = Model.Id, Ranks = new[] { row.Rank } })</td>
                            <td>@Html.ActionLink(row.Incomplete.ToString(), "Index", "SSD", new SoldierSearchService.Query { Unit = Model.Id, Ranks = new[] { row.Rank }, SSD = false })</td>
                            <td>@Html.ActionLink(row.Completed.ToString(), "Index", "SSD", new SoldierSearchService.Query { Unit = Model.Id, Ranks = new[] { row.Rank }, SSD = true })</td>
                            <td>@Html.ActionLink(row.Percentage.ToString("P0"), "Index", "SSD", new SoldierSearchService.Query { Unit = Model.Id, Ranks = new[] { row.Rank } })</td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <th></th>
                        <th></th>
                        <th>@Html.ActionLink(Model.SSDTotal.Assigned.ToString(), "Index", "SSD", new SoldierSearchService.Query { Unit = Model.Id })</th>
                        <th>@Html.ActionLink(Model.SSDTotal.Incomplete.ToString(), "Index", "SSD", new SoldierSearchService.Query { Unit = Model.Id, SSD = false })</th>
                        <th>@Html.ActionLink(Model.SSDTotal.Completed.ToString(), "Index", "SSD", new SoldierSearchService.Query { Unit = Model.Id, SSD = true })</th>
                        <th>@Html.ActionLink(Model.SSDTotal.Percentage.ToString("P0"), "Index", "SSD", new SoldierSearchService.Query { Unit = Model.Id })</th>
                    </tr>
                </tfoot>
            </table>
        </div>

        <div role="tabpanel" class="tab-pane" id="EDUCATION">
            <h2>@Html.DisplayNameFor(_ => Model.Education)</h2>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(_ => Model.Education.FirstOrDefault().Rank)</th>
                        <th>Level</th>
                        <th>@Html.DisplayNameFor(_ => Model.Education.FirstOrDefault().Assigned)</th>
                        <th>@Html.DisplayNameFor(_ => Model.Education.FirstOrDefault().Incomplete)</th>
                        <th>@Html.DisplayNameFor(_ => Model.Education.FirstOrDefault().Completed)</th>
                        <th>@Html.DisplayNameFor(_ => Model.Education.FirstOrDefault().Percentage)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var row in Model.Education)
            {
                        <tr>
                            <td>@Html.ActionLink(row.Rank.DisplayName(), "Index", "Soldiers", new SoldierSearchService.Query { Unit = Model.Id, Ranks = new[] { row.Rank } })</td>
                            <td>@EducationExtensions.RequiredEducation(row.Rank).ShortName()</td>
                            <td>@Html.ActionLink(row.Assigned.ToString(), "Index", "Soldiers", new SoldierSearchService.Query { Unit = Model.Id, Ranks = new[] { row.Rank } })</td>
                            <td>@Html.ActionLink(row.Incomplete.ToString(), "Index", "Soldiers", new SoldierSearchService.Query { Unit = Model.Id, Ranks = new[] { row.Rank }, EducationComplete = false })</td>
                            <td>@Html.ActionLink(row.Completed.ToString(), "Index", "Soldiers", new SoldierSearchService.Query { Unit = Model.Id, Ranks = new[] { row.Rank }, EducationComplete = true })</td>
                            <td>@Html.ActionLink(row.Percentage.ToString("P0"), "Index", "Soldiers", new SoldierSearchService.Query { Unit = Model.Id, Ranks = new[] { row.Rank } })</td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <th></th>
                        <th></th>
                        <th>@Html.ActionLink(Model.EducationTotal.Assigned.ToString(), "Index", "Soldiers", new SoldierSearchService.Query { Unit = Model.Id })</th>
                        <th>@Html.ActionLink(Model.EducationTotal.Incomplete.ToString(), "Index", "Soldiers", new SoldierSearchService.Query { Unit = Model.Id, EducationComplete = false })</th>
                        <th>@Html.ActionLink(Model.EducationTotal.Completed.ToString(), "Index", "Soldiers", new SoldierSearchService.Query { Unit = Model.Id, EducationComplete = false })</th>
                        <th>@Html.ActionLink(Model.EducationTotal.Percentage.ToString("P0"), "Index", "Soldiers", new SoldierSearchService.Query { Unit = Model.Id })</th>
                    </tr>
                </tfoot>
            </table>
        </div>

        <div role="tabpanel" class="tab-pane" id="DSCA">
            <h2>@Html.DisplayNameFor(_ => Model.DSCA)</h2>
            <table class="table table-bordered">
                <tbody>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => Model.DSCA.Assigned)</td>
                        <td>@Html.DisplayFor(_ => Model.DSCA.Assigned)</td>
                    </tr>
                    <tr>
                        <td>Qualified</td>
                        <td>@Html.ActionLink(Model.DSCA.Passed.ToString(), "Index", "Soldiers", new SoldierSearchService.Query { Unit = Model.Id, DSCA = true })</td>
                    </tr>
                    <tr>
                        <td>Qualified (Overdue)</td>
                        <td>@Html.ActionLink(Model.DSCA.Failed.ToString(), "Index", "Soldiers", new SoldierSearchService.Query { Unit = Model.Id, DSCA = true })</td>
                    </tr>
                    <tr>
                        <td>Unqualified</td>
                        <td>@Html.ActionLink(Model.DSCA.NotTested.ToString(), "Index", "Soldiers", new SoldierSearchService.Query { Unit = Model.Id, DSCA = false })</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => Model.DSCA.PercentPass)</td>
                        <td>@Html.DisplayFor(_ => Model.DSCA.PercentPass)</td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div role="tabpanel" class="tab-pane" id="CLS">
            <h2>@Html.DisplayNameFor(_ => Model.CLS) <span class="badge">@Model.CLS.Count()</span></h2>

            <a href="http://www.me.ngb.army.mil/units/rti/resources/IS0871_Edition_C_ALMS.pdf">Requirements</a>

            <table>
                <tbody>
                    @foreach (var soldier in Model.CLS)
                    {
                        <tr>
                            <td>@Html.DisplayFor(_ => soldier)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div role="tabpanel" class="tab-pane" id="IWQ">
            <h2>@Html.DisplayNameFor(_ => Model.IWQ)</h2>
            <table class="table table-bordered">
                <tbody>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => Model.IWQ.Assigned)</td>
                        <td>@Html.DisplayFor(_ => Model.IWQ.Assigned)</td>
                    </tr>
                    <tr>
                        <td>Qualified</td>
                        <td>@Html.ActionLink(Model.IWQ.Passed.ToString(), "Index", "Soldiers", new SoldierSearchService.Query { Unit = Model.Id, IWQ = true })</td>
                    </tr>
                    <tr>
                        <td>Qualified (Overdue)</td>
                        <td>@Html.ActionLink(Model.IWQ.Failed.ToString(), "Index", "Soldiers", new SoldierSearchService.Query { Unit = Model.Id, IWQ = true })</td>
                    </tr>
                    <tr>
                        <td>Unqualified</td>
                        <td>@Html.ActionLink(Model.IWQ.NotTested.ToString(), "Index", "Soldiers", new SoldierSearchService.Query { Unit = Model.Id, IWQ = false })</td>
                    </tr>
                    <tr>
                        <td>@Html.DisplayNameFor(_ => Model.IWQ.PercentPass)</td>
                        <td>@Html.DisplayFor(_ => Model.IWQ.PercentPass)</td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div role="tabpanel" class="tab-pane" id="OrgChart">
        </div>
    </div>
</div>

@section Scripts
    {
    @{
        var soldiers =
            Model
            .Soldiers
            .Select(soldier => new
            {
                Name = soldier.ToString(),
                Supervisor = soldier.Supervisor?.ToString()
            })
            .ToList();
    }

    <!--Load the AJAX API-->
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">

        // Load the Visualization API and the corechart package.
        google.charts.load('current', { 'packages': ['corechart', 'orgchart'] });

        google.charts.setOnLoadCallback(function () {

            // Build the org chart visualization

            var model = JSON.parse('@Json.Serialize(soldiers)');

            // Create the data table.
            var data = new google.visualization.DataTable();

            data.addColumn('string', 'Name');
            data.addColumn('string', 'Supervisor');

            for (var i = 0; i < model.length; i++) {
                data.addRow([model[i].name, model[i].supervisor]);
            }

            var chart = new google.visualization.OrgChart(document.getElementById('OrgChart'));

            chart.draw(data, { allowHtml: true });
        });
    </script>
}