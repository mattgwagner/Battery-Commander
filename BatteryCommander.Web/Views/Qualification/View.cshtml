@model BatteryCommander.Common.Models.Qualification

@{
    ViewBag.Title = "View Qualification";
}

<h2>@ViewBag.Title</h2>

<table class="table table-bordered">
    @if (Model.ParentTaskId.HasValue)
    {
        <tr>
            <td>@Html.DisplayNameFor(model => model.ParentTask)</td>
            <td>@Html.DisplayFor(model => model.ParentTask)</td>
        </tr>
    }

    <tr>
        <td>@Html.DisplayNameFor(model => model.Name)</td>
        <td>@Html.DisplayFor(model => model.Name)</td>
    </tr>

    <tr>
        <td>@Html.DisplayNameFor(model => model.Description)</td>
        <td>@Html.DisplayFor(model => model.Description)</td>
    </tr>

</table>

<hr />

<h2>@Html.DisplayNameFor(model => model.SoldierQualifications)</h2>

<table class="table table-striped">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.SoldierQualifications.FirstOrDefault().Soldier)</th>
            <th>@Html.DisplayNameFor(model => model.SoldierQualifications.FirstOrDefault().Status)</th>
            <th>@Html.DisplayNameFor(model => model.SoldierQualifications.FirstOrDefault().QualificationDate)</th>
            <th>@Html.DisplayNameFor(model => model.SoldierQualifications.FirstOrDefault().ExpirationDate)</th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var soldier_qual in Model.SoldierQualifications.OrderBy(q => q.Status).ThenBy(q => q.ExpirationDate))
        {
            <tr>
                <td>@Html.DisplayFor(s => soldier_qual.Soldier)</td>
                <td>@Html.DisplayFor(s => soldier_qual.Status)</td>
                <td>@Html.DisplayFor(s => soldier_qual.QualificationDate)</td>
                <td>@Html.DisplayFor(s => soldier_qual.ExpirationDate)</td>
                <td>@Html.ActionLink("Edit", "Edit", "SoldierQualification", new { soldierId = soldier_qual.Soldier, qualificationId = soldier_qual.QualificationId }, null)</td>
            </tr>
        }
    </tbody>

</table>

<hr />

<h3>@Html.DisplayNameFor(m => m.Tasks)</h3>

@Html.ActionLink("Add a Subtask", "New", new { parentId = Model.Id }, new { @class = "btn btn-primary" })

@Html.ActionLink("Bulk Add Subtasks", "AddTasks", new { qualificationId = Model.Id }, new { @class = "btn btn-warning" })

<table class="table table-bordered">
    <tbody>
        @foreach (var task in Model.Tasks)
        {
            <tr>
                <td>@Html.DisplayFor(t => task)</td>
            </tr>
        }
    </tbody>
</table>




<p>
    <a href="~/Qualification/@Model.Id/Update">Bulk Update Soldiers</a> |
    @Html.ActionLink("Back to List", "List", "Qualification", null, , new { @class = "btn btn-primary" }) |

    @if (Model.ParentTaskId.HasValue)
    {
        @Html.ActionLink("Back to Parent Task", "View", new { qualificationId = Model.ParentTaskId }, new { @class = "btn btn-info" })
    }
</p>
